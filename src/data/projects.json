{
    "1": {
        "name": "Cloud Brokerage Platform",
        "sections": [{
            "header": "Who",
            "text": "Executives, dev managers, devOps professionals",
            "images": []
        },
        {
            "header": "Why",
            "text": "With businesses moving to the cloud cost overruns are a becoming more common. Executives and managers need better insight into the cloud spend before large surprise bills. DevOps team members need to be able to quickly tend to resources that are creating issues from a cost perspective.",
            "images": []
        },
        {
            "header": "What",
            "text": "The team set out to deliver a platform that would allow organizations to determine which cloud provider would be serve their purpose as well as helping them understand the potential costs at any time with the help of data analytics.",
            "images": []
        },
        {
            "header": "How",
            "text": "There was preliminary research that suggested there was an opportunity for our platform to be useful to a large audience. To kickoff the project, I facilitated a design thinking workshop to align stakeholders. This workshop allowed everyone (engineering, executives, product management, etc.) to express concerns and desires. The workshop also allowed us to agree on key pain points to address.\n\n After the completion of the workshop, I lead the effort to create the information architecture and lead a team of visual designers to design the UI for the product. The design began to take form after a couple of sketching sessions that allowed us to address issues without being focused on the aesthetics. Once we felt issues were addressed appropriately I direct the team to start applying visual. With my direction, the visual design team iterated over visual treatments until we all aligned.",
            "images": [
                {
                    "caption": "image caption",
                    "url": "/images/cloud-brokerage/workshop_01.png"
                },
                {
                    "caption": "image caption",
                    "url": "/images/cloud-brokerage/workshop_02.png"
                },
                {
                    "caption": "image caption",
                    "url": "/images/cloud-brokerage/workshop_03.png"
                },{
                "caption": "image caption",
                "url": "/images/cloud-brokerage/process_01.png"
            },
            {
                "caption": "image caption",
                "url": "/images/cloud-brokerage/process_02.png"
            },
            {
                "caption": "image caption",
                "url": "/images/cloud-brokerage/process_03.png"
            },
            {
                "caption": "image caption",
                "url": "/images/cloud-brokerage/sketch_01.png"
            },
            {
                "caption": "image caption",
                "url": "/images/cloud-brokerage/sketch_02.png"
            },
            {
                "caption": "image caption",
                "url": "/images/cloud-brokerage/sketch_03.png"
            },{
                "caption": "image caption",
                "url": "/images/cloud-brokerage/product_01.png"
            },
            {
                "caption": "image caption",
                "url": "/images/cloud-brokerage/product_02.png"
            },
            {
                "caption": "image caption",
                "url": "/images/cloud-brokerage/product_03.png"
            }]
        },
        {
            "header": "Takeaways",
            "text": "The product allowed management to quickly get insight into the month's cloud spend. Should anomalies be identified, devOps would easily be able to identify problem resources and rectify the issue. The product allowed companies to capture money",
            "images": []
        },
        {
            "header": "Tools & Roles",
            "text": "Role: UX Design, Information Architect, Design/Project Manager",
            "images": []
        }]
    },
    "2": {
        "name": "Photography Utility",
        "sections": [{
            "header": "Tools & Roles",
            "text": "Tools: NodeJS, ReactJS \nRole: UX Design, Front and Backend Development",
            "images": []
        },{
            "header": "Problem",
            "text": "My photographer friend was doing a product photoshoot. The photos were going to be used on a website but he had no idea how they would look. As he was shooting tethered to the computer the idea came to mind to take the photos as they come in and drop them into a web template, allowing him to see how the photos would look online in real-time.",
            "images": [{
                "caption": "image caption",
                "url": "/images/photography-utility/studio01.png"
            },
            {
                "caption": "image caption",
                "url": "/images/photography-utility/studio02.png"
            }]
        },
        {
            "header": "Solution",
            "text": "I didn't know much about working with Node and file systems so I researched how to watch a file folder for updates. With the knowledge in hand I set out to build a simply utility that would watch a folder and copy any added files to a new directory. This new directory was the “web” directory. The website was hosted from this directory. In addition to the images was a web template setup to read in the images. The template had both list and details pages.\n\nOnce complete, I reached out to my friend to have him test everything out. I took his feedback to fine tune the utility documentation as well as the web template. He integrated the utility into his workflow and was able to fine tune photographs based on what he saw on the web demo",
            "images": [{
                "caption": "image caption",
                "url": "/images/photography-utility/inuse01.png"
            },
            {
                "caption": "image caption",
                "url": "/images/photography-utility/inuse02.png"
            },{
                "caption": "image caption",
                "url": "/images/photography-utility/hero.png"
            }],
            "videos": [{
                "caption": "video caption",
                "url": "https://thompsonjamesquillan-portfolio.s3.us-east-2.amazonaws.com/workflow.mp4"
            }]
        }]
    },
    "3": {
        "name": "Auto AI Utility",
        "sub": "Simplifying AI",
        "sections": [{
            "header": "Tools & Roles",
            "text": "Tools: Python, ReactJS, Carbon \nRole: UX Design, Front and Backend Development",
            "images": []
        },{
            "header": "Problem",
            "text": "While there was a call to add more AI to IBM products there was very little AI in prototypes. The AI/ML learning curve is steep. I realized a process was needed to allow a UXE to quickly include a ML model into a prototype without extensive knowledge of model creation.",
            "images": []
        },
        {
            "header": "Solution",
            "text": "I developed a tool that would all a UXE to submit structured data and receive a predictive model in return. The UXE could then make API calls to the model to have actual predictions included in their prototypes instead of dummy data.",
            "images": [{
                "caption": "image caption",
                "url": "/images/ai-utility/01.png"
            },
            {
                "caption": "image caption",
                "url": "/images/ai-utility/02.png"
            }]
        }]
    },
    "4": {
        "name": "Data Pipeline",
        "sub": "Machine learning and sports",
        "sections": [{
            "header": "Tools & Roles",
            "text": "Tools: Python, GoogleSheets,\nRole: Backend Development, Data Analyst",
            "images": []
        },{
            "header": "Opportunity",
            "text": "As an avid sports fan, I wanted to take my knowledge of machine learning (ML) models and love of sports to build a data pipeline that would predict the over or under selection for the second half. During the football season I manually captured betting data and stats and fed that data to my models. I got decent results so I decided to build out the pipeline to support basketball. Due to the vast number of basketball games my manual approach was not going to work. An automated pipeline was needed in order for it to be effective.",
            "images": [{
                "caption": "image caption",
                "url": "/images/data-pipeline/01.png"
            },
            {
                "caption": "image caption",
                "url": "/images/data-pipeline/02.png"
            },
            {
                "caption": "image caption",
                "url": "/images/data-pipeline/03.png"
            }]
        },
        {
            "header": "Solution",
            "text": "I was given access to a live sports betting API. I wrote a Python application that would update the betting lines up until tip off. The application would check the progress of games and once a game was in halftime the application would get the updated stats and betting lines. The updated stats and betting lines were used to determine if an over or under bet should be made for the second half. The script would be started before the tip of the first game of the day and would run until the last game finished. A Google Sheet was updated with the results.",
            "images": [
            {
                "caption": "image caption",
                "url": "/images/data-pipeline/04.png"
            },
            {
                "caption": "image caption",
                "url": "/images/data-pipeline/05.png"
            }]
        },
        {
            "header": "Outcome",
            "text": "The output of the models were used in conjunction with knowledge of game to make profitable bets.",
            "images": []
        }]
    },
    "5": {
        "name": "SVG Animation",
        "sections": [{
            "header": "Tools & Roles",
            "text": "Tools: ReactJS \nRole: Frontend Development",
            "images": []
        },{
            "header": "Problem",
            "text": "Merging multiple pattern sites into one, there was a desire to highlight the number of patterns being used across the organization. Instead of using a flat chart, there was a desire to use an animated SVG.",
            "images": []
        },
        {
            "header": "Solution",
            "text": "I was charged with implementing the animated SVG. Not knowing much about animated SVGs I collaborated with another team member who had a key piece of knowledge. Once I had that key piece of knowledge I was able to implement the animated SVG. Once implemented I began to figure out ways that would optimize the experience. I worked with the designer to understand how the exports were working and how we could exploit that to get our desired results. The animation has now been optimized",
            "images": [{
                "caption": "image caption",
                "url": "/images/animated-svg/01.png"
            },
            {
                "caption": "image caption",
                "url": "/images/animated-svg/02.png"
            }],
            "videos": [{
                "caption": "video caption",
                "url": "https://thompsonjamesquillan-portfolio.s3.us-east-2.amazonaws.com/svg.mp4"
            }]
        }]
    },
    "6": {
        "name": "Watson Assistant",
        "sections": [{
            "header": "Tools & Roles",
            "text": "Tools: VueJS, \nRole: Frontend Development",
            "images": []
        },{
            "header": "Problem",
            "text": "At the time, Watson Assistant 'out of the box' had no user interface. A customer would have to deploy resources to apply a user interface.",
            "images": []
        },
        {
            "header": "Solution",
            "text": "A generic user interface was applied to Watson Assistant, allowing a customer to focus on training the models and not the user interface. I developed a prototype to demonstrate the new chat window interface.",
            "images": [{
                "caption": "image caption",
                "url": "/images/watson-assistant/01.png"
            },
            {
                "caption": "image caption",
                "url": "/images/watson-assistant/02.png"
            },
            {
                "caption": "image caption",
                "url": "/images/watson-assistant/03.png"
            },
            {
                "caption": "image caption",
                "url": "/images/watson-assistant/04.png"
            },
            {
                "caption": "image caption",
                "url": "/images/watson-assistant/05.png"
            },
            {
                "caption": "image caption",
                "url": "/images/watson-assistant/06.png"
            },
            {
                "caption": "image caption",
                "url": "/images/watson-assistant/07.png"
            }],
            "videos": [{
                "caption": "video caption",
                "url": "https://thompsonjamesquillan-portfolio.s3.us-east-2.amazonaws.com/widget.mp4"
            }]
        }]
    }
}